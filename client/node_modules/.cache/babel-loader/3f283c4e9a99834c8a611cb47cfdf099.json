{"ast":null,"code":"function createBroadcast(initialState) {\n  var listeners = {};\n  var id = 0;\n  var _state = initialState;\n\n  var getState = function getState() {\n    return _state;\n  };\n\n  var setState = function setState(state) {\n    _state = state;\n    var keys = Object.keys(listeners);\n\n    for (var i = 0; i < keys.length; i += 1) {\n      // if a listener gets unsubscribed during setState we just skip it\n      if (typeof listeners[keys[i]] !== 'undefined') {\n        listeners[keys[i]](state);\n      }\n    }\n  };\n\n  var subscribe = function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('listener must be a function.');\n    }\n\n    var currentId = id;\n    var isSubscribed = true;\n    listeners[currentId] = listener;\n    id += 1;\n    return function unsubscribe() {\n      // in case unsubscribe gets called multiple times we simply return\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n      delete listeners[currentId];\n    };\n  };\n\n  return {\n    getState: getState,\n    setState: setState,\n    subscribe: subscribe\n  };\n}\n\nexport default createBroadcast;","map":null,"metadata":{},"sourceType":"module"}