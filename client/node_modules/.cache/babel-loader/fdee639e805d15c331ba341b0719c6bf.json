{"ast":null,"code":"import _objectSpread from \"/Users/tonyparker/Documents/github/karfur/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/tonyparker/Documents/github/karfur/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/tonyparker/Documents/github/karfur/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tonyparker/Documents/github/karfur/src/components/UI/SpringButton/SpringButton.js\";\nimport React, { useState, useRef } from 'react';\nimport { useTransition, useSpring, useChain, config } from 'react-spring';\nimport { Container, Item } from './styles';\nimport data from './data';\nimport './SpringButton.css';\nexport default function SpringButton() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      set = _useState2[1];\n\n  var springRef = useRef();\n\n  var _useSpring = useSpring({\n    ref: springRef,\n    config: config.stiff,\n    from: {\n      width: '200px',\n      height: '100px',\n      background: 'turquoise'\n    },\n    to: {\n      width: open ? '200px' : '200px',\n      height: open ? '100px' : '100px',\n      background: open ? 'white' : 'turquoise'\n    }\n  }),\n      width = _useSpring.width,\n      height = _useSpring.height,\n      opacity = _useSpring.opacity,\n      rest = _objectWithoutProperties(_useSpring, [\"width\", \"height\", \"opacity\"]);\n\n  var transRef = useRef();\n  var transitions = useTransition(open ? data : [], function (item) {\n    return item.name;\n  }, {\n    ref: transRef,\n    unique: true,\n    trail: 400 / data.length,\n    from: {\n      opacity: 0,\n      transform: 'scale(0)'\n    },\n    enter: {\n      opacity: 1,\n      transform: 'scale(1)'\n    },\n    leave: {\n      opacity: 0,\n      transform: 'scale(0)'\n    }\n  }); // This will orchestrate the two animations above, comment the last arg and it creates a sequence\n\n  useChain(open ? [springRef, transRef] : [transRef, springRef], [0, open ? 0.1 : 0.6]);\n  return React.createElement(Container, {\n    className: \"styledButton\",\n    style: _objectSpread({}, rest, {\n      width: width,\n      height: height\n    }),\n    onClick: function onClick() {\n      return set(function (open) {\n        return !open;\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, !open && props.element.name, transitions.map(function (_ref) {\n    var item = _ref.item,\n        key = _ref.key,\n        props = _ref.props;\n    return React.createElement(Item, {\n      key: key,\n      style: _objectSpread({}, props, {\n        background: item.css\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, item.name);\n  }));\n}","map":{"version":3,"sources":["/Users/tonyparker/Documents/github/karfur/src/components/UI/SpringButton/SpringButton.js"],"names":["React","useState","useRef","useTransition","useSpring","useChain","config","Container","Item","data","SpringButton","open","set","springRef","ref","stiff","from","width","height","background","to","opacity","rest","transRef","transitions","item","name","unique","trail","length","transform","enter","leave","props","element","map","key","css"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useTransition, useSpring, useChain, config } from 'react-spring'\nimport { Container, Item } from './styles'\nimport data from './data'\n\nimport './SpringButton.css';\n\nexport default function SpringButton() {\n  const [open, set] = useState(false)\n\n  const springRef = useRef()\n  const { width,height, opacity, ...rest } = useSpring({\n    ref: springRef,\n    config: config.stiff,\n    from: { width: '200px',height: '100px', background: 'turquoise' },\n    to: { width: open ? '200px' : '200px', height: open ? '100px' : '100px', background: open ? 'white' : 'turquoise' }\n  })\n\n  const transRef = useRef()\n  const transitions = useTransition(open ? data : [], item => item.name, {\n    ref: transRef,\n    unique: true,\n    trail: 400 / data.length,\n    from: { opacity: 0, transform: 'scale(0)' },\n    enter: { opacity: 1, transform: 'scale(1)' },\n    leave: { opacity: 0, transform: 'scale(0)' }\n  })\n\n  // This will orchestrate the two animations above, comment the last arg and it creates a sequence\n  useChain(open ? [springRef, transRef] : [transRef, springRef], [0, open ? 0.1 : 0.6])\n\n  return (\n    <Container className=\"styledButton\" style={{ ...rest, width: width, height: height }} onClick={() => set(open => !open)}>\n      {!open && props.element.name}\n      {transitions.map(({ item, key, props }) => (\n        <Item key={key} style={{ ...props, background: item.css }}>\n          {item.name}\n        </Item>\n      ))}\n    </Container>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}