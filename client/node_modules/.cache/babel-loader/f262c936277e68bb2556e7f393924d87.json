{"ast":null,"code":"import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport backend from \"i18next-xhr-backend\";\nimport { reactI18nextModule } from \"react-i18next\";\nimport translationFR from './locales/fr/translation.json';\nimport translationEN from './locales/en/translation.json';\nimport translationAR from './locales/ar/translation.json'; // the translations\n\nvar resources = {\n  fr: {\n    translation: translationFR\n  },\n  en: {\n    translation: translationEN\n  },\n  ar: {\n    translation: translationAR\n  }\n};\ni18n.use(detector).use(backend).use(reactI18nextModule) // passes i18n down to react-i18next\n.init({\n  resources: resources,\n  lng: \"fr\",\n  fallbackLng: \"fr\",\n  // use en if detected lng is not available\n  keySeparator: false,\n  // we do not use keys in form messages.welcome\n  interpolation: {\n    escapeValue: false // react already safes from xss\n\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/Users/tonyparker/Documents/github/karfur/client/src/i18n.js"],"names":["i18n","detector","backend","reactI18nextModule","translationFR","translationEN","translationAR","resources","fr","translation","en","ar","use","init","lng","fallbackLng","keySeparator","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,kBAAT,QAAmC,eAAnC;AAEA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B,C,CAEA;;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,WAAW,EAAEL;AADX,GADY;AAIhBM,EAAAA,EAAE,EAAE;AACFD,IAAAA,WAAW,EAAEJ;AADX,GAJY;AAOhBM,EAAAA,EAAE,EAAE;AACFF,IAAAA,WAAW,EAAEH;AADX;AAPY,CAAlB;AAYAN,IAAI,CACDY,GADH,CACOX,QADP,EAEGW,GAFH,CAEOV,OAFP,EAGGU,GAHH,CAGOT,kBAHP,EAG2B;AAH3B,CAIGU,IAJH,CAIQ;AACJN,EAAAA,SAAS,EAATA,SADI;AAEJO,EAAAA,GAAG,EAAE,IAFD;AAGJC,EAAAA,WAAW,EAAE,IAHT;AAGe;AAEnBC,EAAAA,YAAY,EAAE,KALV;AAKiB;AAErBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACM;;AADN;AAPX,CAJR;AAgBA,eAAelB,IAAf","sourcesContent":["import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport backend from \"i18next-xhr-backend\";\nimport { reactI18nextModule } from \"react-i18next\";\n\nimport translationFR from './locales/fr/translation.json';\nimport translationEN from './locales/en/translation.json';\nimport translationAR from './locales/ar/translation.json';\n\n// the translations\nconst resources = {\n  fr: {\n    translation: translationFR\n  },\n  en: {\n    translation: translationEN\n  },\n  ar: {\n    translation: translationAR\n  }\n};\n\ni18n\n  .use(detector)\n  .use(backend)\n  .use(reactI18nextModule) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: \"fr\",\n    fallbackLng: \"fr\", // use en if detected lng is not available\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;"]},"metadata":{},"sourceType":"module"}