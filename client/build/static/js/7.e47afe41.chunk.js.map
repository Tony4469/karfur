{"version":3,"sources":["containers/Reset/Reset.scss","containers/Reset/Reset.js"],"names":["module","exports","lightColor","darkColor","cardColor","blanc","rouge","vert","noir","gris","violet","focus","grisFonce","noirCD","blancSimple","jauneClair","attention","validation","validationHover","error","erreur","uiattention","standby","orange","Reset","state","newPassword","cpassword","isLoading","isError","reset_password_token","togglePasswordVisibility","_this","setState","pS","passwordVisible","send","e","preventDefault","length","Swal","fire","title","text","type","timer","passwdCheck","score","user","API","set_new_password","then","data","props","history","push","localStorage","setItem","token","setAuthToken","fetchUser","catch","console","log","response","handleChange","event","Object","_Users_lamazing_Work_refugies_info_karfur_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","id","value","upcoming","_this2","this","_","get","get_users","query","reset_password_expires","$gt","Date","now","users","_this$state","t","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","_components_FigmaUI_FButton_FButton__WEBPACK_IMPORTED_MODULE_20__","tag","NavLink","to","fill","variables","name","password_check","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","onSubmit","_components_FigmaUI_FInput_FInput__WEBPACK_IMPORTED_MODULE_21__","prepend","append","autoFocus","prependName","appendName","inputClassName","onAppendClick","placeholder","autoComplete","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_11__","color","colorAvancement","disabled","react_router_dom__WEBPACK_IMPORTED_MODULE_13__","Component","mapDispatchToProps","fetchUserActionCreator","track","page","dispatchOnMount","connect","withTranslation"],"mappings":"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","file":"static/js/7.e47afe41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lightColor\":\"#F2F2F2\",\"darkColor\":\"#212121\",\"cardColor\":\"#828282\",\"blanc\":\"#FBFBFB\",\"rouge\":\"#E55039\",\"vert\":\"#2CA12A\",\"noir\":\"#212121\",\"gris\":\"#F2F2F2\",\"violet\":\"#583F93\",\"focus\":\"#2D9CDB\",\"grisFonce\":\"#828282\",\"noirCD\":\"#CDCDCD\",\"blancSimple\":\"#FFFFFF\",\"jauneClair\":\"#FFF7AE\",\"attention\":\"#F9EF99\",\"validation\":\"#DEF6C2\",\"validationHover\":\"#4CAF50\",\"error\":\"#F44336\",\"erreur\":\"#FFCECB\",\"uiattention\":\"#FFEB3B\",\"standby\":\"#FDD497\",\"orange\":\"#FF9800\"};","import React, { Component } from \"react\";\nimport track from \"react-tracking\";\nimport { Card, CardBody, Form, Progress } from \"reactstrap\";\nimport Swal from \"sweetalert2\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport _ from \"lodash\";\nimport passwdCheck from \"zxcvbn\";\n\nimport API from \"../../utils/API\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport FButton from \"../../components/FigmaUI/FButton/FButton\";\nimport FInput from \"../../components/FigmaUI/FInput/FInput\";\nimport { fetchUserActionCreator } from \"../../services/User/user.actions\";\nimport { colorAvancement } from \"../../components/Functions/ColorFunctions\";\n\nimport \"./Reset.scss\";\nimport variables from \"scss/colors.scss\";\n\nclass Reset extends Component {\n  state = {\n    newPassword: \"\",\n    cpassword: \"\",\n    isLoading: true,\n    isError: false,\n    reset_password_token: \"\",\n  };\n\n  componentDidMount() {\n    const reset_password_token = _.get(this.props, \"match.params.id\");\n    if (!reset_password_token) {\n      return this.setState({ isLoading: false, isError: true });\n    }\n    API.get_users({\n      query: {\n        reset_password_token,\n        reset_password_expires: { $gt: Date.now() },\n      },\n    })\n      .then((data) => {\n        const users = data.data.data;\n        if (users && users.length === 1) {\n          this.setState({ isLoading: false, reset_password_token });\n        } else {\n          this.setState({ isLoading: false, isError: true });\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n        this.setState({ isLoading: false, isError: true });\n      });\n  }\n\n  togglePasswordVisibility = () =>\n    this.setState((pS) => ({ passwordVisible: !pS.passwordVisible }));\n\n  send = (e) => {\n    e.preventDefault();\n    if (this.state.newPassword.length === 0) {\n      return Swal.fire({\n        title: \"Oops...\",\n        text: \"Aucun mot de passe n'est renseigné !\",\n        type: \"error\",\n        timer: 1500,\n      });\n    }\n    if (this.state.newPassword !== this.state.cpassword) {\n      return Swal.fire({\n        title: \"Oops...\",\n        text: \"Les mots de passes ne correspondent pas !\",\n        type: \"error\",\n        timer: 1500,\n      });\n    }\n    if ((passwdCheck(this.state.newPassword) || {}).score < 1) {\n      return Swal.fire({\n        title: \"Oops...\",\n        text: \"Le mot de passe est trop faible\",\n        type: \"error\",\n        timer: 1500,\n      });\n    }\n    const user = {\n      newPassword: this.state.newPassword,\n      cpassword: this.state.cpassword,\n      reset_password_token: this.state.reset_password_token,\n    };\n    API.set_new_password(user)\n      .then((data) => {\n        Swal.fire({\n          title: \"Yay...\",\n          text: \"Modification du mot de passe réussie !\",\n          type: \"success\",\n          timer: 1500,\n        }).then(() => {\n          this.props.history.push(\"/\");\n        });\n        localStorage.setItem(\"token\", data.data.token);\n        setAuthToken(data.data.token);\n        this.props.fetchUser();\n      })\n      .catch((e) => console.log(e.response));\n  };\n\n  handleChange = (event) =>\n    this.setState({ [event.target.id]: event.target.value });\n\n  upcoming = () =>\n    Swal.fire({\n      title: \"Oh non!\",\n      text: \"Cette fonctionnalité n'est pas encore disponible\",\n      type: \"error\",\n      timer: 1500,\n    });\n\n  render() {\n    const {\n      passwordVisible,\n      newPassword,\n      cpassword,\n      isLoading,\n      isError,\n    } = this.state;\n    const { t } = this.props;\n    if (isLoading) {\n      return (\n        <div className=\"loading-access\">\n          <h3>\n            {t(\n              \"Login.Chargement des données utilisateur\",\n              \"Chargement des données utilisateur\"\n            )}\n            ...\n          </h3>\n        </div>\n      );\n    } else if (isError) {\n      return (\n        <div className=\"loading-access\">\n          <h5>\n            {t(\n              \"Login.Problème mdp\",\n              \"Un problème est survenu au moment de réinitialiser le mot de passe. Merci d'essayer à nouveau\"\n            )}\n            ...\n          </h5>\n          <FButton\n            tag={NavLink}\n            to=\"/login\"\n            fill={variables.noir}\n            name=\"arrow-back-outline\"\n          >\n            {t(\n              \"Login.Revenir à la page de connexion\",\n              \"Revenir à la page de connexion\"\n            )}\n          </FButton>\n        </div>\n      );\n    } else {\n      const password_check = newPassword && passwdCheck(newPassword);\n      return (\n        <div className=\"app flex-row align-items-center reset\">\n          <div className=\"login-wrapper\">\n            <Card className=\"card-login main-card\">\n              <CardBody>\n                <Form onSubmit={this.send}>\n                  <h5>\n                    {t(\n                      \"Login.Réinitialisez votre mot de passe\",\n                      \"Réinitialisez votre mot de passe\"\n                    )}\n                  </h5>\n                  <div className=\"texte-small mb-12\">\n                    {t(\n                      \"Login.Renseignez ici le nouveau mot de passe souhaité\",\n                      \"Renseignez ici le nouveau mot de passe souhaité\"\n                    )}\n                  </div>\n                  <FInput\n                    prepend\n                    append\n                    autoFocus\n                    prependName=\"lock-outline\"\n                    appendName={\n                      passwordVisible ? \"eye-off-2-outline\" : \"eye-outline\"\n                    }\n                    type={passwordVisible ? \"text\" : \"password\"}\n                    inputClassName=\"password-input\"\n                    onAppendClick={this.togglePasswordVisibility}\n                    id=\"newPassword\"\n                    placeholder={t(\n                      \"Login.Nouveau mot de passe\",\n                      \"Nouveau mot de passe\"\n                    )}\n                    autoComplete=\"new-password\"\n                    value={newPassword}\n                    onChange={this.handleChange}\n                  />\n                  {newPassword && password_check && (\n                    <div className=\"score-wrapper mb-10\">\n                      <span className=\"mr-10\">\n                        {t(\"Login.Force\", \"Force\")} :\n                      </span>\n                      <Progress\n                        color={colorAvancement(password_check.score / 4)}\n                        value={((0.1 + password_check.score / 4) * 100) / 1.1}\n                      />\n                    </div>\n                  )}\n                  <FInput\n                    prepend\n                    append\n                    prependName=\"lock-outline\"\n                    appendName={\n                      passwordVisible ? \"eye-off-2-outline\" : \"eye-outline\"\n                    }\n                    inputClassName=\"password-input\"\n                    type={passwordVisible ? \"text\" : \"password\"}\n                    onAppendClick={this.togglePasswordVisibility}\n                    id=\"cpassword\"\n                    placeholder={t(\n                      \"Login.Confirmez le nouveau mot de passe\",\n                      \"Confirmez le nouveau mot de passe\"\n                    )}\n                    autoComplete=\"cpassword\"\n                    value={cpassword}\n                    onChange={this.handleChange}\n                  />\n                  <div className=\"footer-buttons\">\n                    <FButton\n                      type=\"dark\"\n                      name=\"log-in\"\n                      color=\"dark\"\n                      className=\"connect-btn\"\n                      disabled={!newPassword}\n                    >\n                      {t(\"Valider\", \"Valider\")}\n                    </FButton>\n                  </div>\n                </Form>\n              </CardBody>\n            </Card>\n            <NavLink to=\"/\">\n              <FButton\n                type=\"outline\"\n                name=\"corner-up-left-outline\"\n                className=\"retour-btn\"\n              >\n                {t(\"Login.Retour à l'accueil\", \"Retour à l'accueil\")}\n              </FButton>\n            </NavLink>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapDispatchToProps = { fetchUser: fetchUserActionCreator };\n\nexport default track(\n  {\n    page: \"Reset\",\n  },\n  { dispatchOnMount: true }\n)(connect(null, mapDispatchToProps)(withTranslation()(Reset)));\n"],"sourceRoot":""}